{
  "name": "iSpindel",
  "tagline": "DIY elektronische Bierspindel | electronic Hydrometer",
  "body": "iSpindel\r\n===================\r\n\r\n**DIY elektronische Bierspindel | electronic Hydrometer**\r\n***https://universam1.github.io/iSpindel***\r\n\r\n***Unterstützung des Projekts*** \r\n[![Donate](https://www.paypalobjects.com/de_DE/DE/i/btn/btn_donate_LG.gif)](https://www.paypal.me/universam)\r\n\r\n> Update 28.11.16: Firmware v.2.0 - Ubidots Auto-Konfiguration  \r\n> Update 28.11.16: Ubidots Einrichtung  \r\n> Update 23.11.16: Schaltplan und Firmware\r\n\r\n\r\n> Die ```iSpindel``` befindet sich zur Zeit mitten in der Entwicklung, siehe dazu [den Hobbybrauer.de Thread](http://hobbybrauer.de/forum/viewtopic.php?f=7&t=11235). Mitthilfe ist herzlich willkommen und Ergänzungen bitte per Pull Request einreichen. Großes Dank an alle die Unterstützung leisten seitens Grundlagen erarbeiten oder passende Hardware zu finden.\r\n\r\n![Spindel im Reinwasser](docs/floating.jpg)\r\n![Dashboard](docs/Dashboard.jpg)\r\n\r\n\r\n## Inhaltverzeichnis\r\n- [Lizenz](#lizenz)\r\n- [Prinzip](#prinzip)\r\n  - [Metazentrum](#metazentrum)\r\n- [Aufbau](#aufbau)\r\n  - [Bauteile](#bauteile)\r\n  - [Schaltplan](#schaltplan)\r\n  - [Schlitten](#schlitten)\r\n- [Konfiguration](#konfiguration)\r\n  - [Ubitdots](#ubitdots)\r\n  - [Portal](#portal)\r\n- [Software](#software)\r\n\r\n\r\n***\r\n\r\n## Lizenz\r\n> Jeglicher kommerzieller Nachbau oder Verwendung ist prinzipiell untersagt. Geltende Patente werden verletzt.\r\n>\r\n> All rights reserverd, any commercial use is hereby prohibited and will violate applicable patents.\r\n\r\n***\r\n\r\n## Prinzip\r\n\r\nAngetrieben von dem Thread [Alternative zu Spindel](http://hobbybrauer.de/forum/viewtopic.php?f=7&t=11157&view=unread#p170499) wurde die Idee geboren die kommerziell erhältliche elektronische Bierspindel nachzubauen.\r\n\r\nDie Idee des krängende Zylinders ist genial wie einfach - man braucht keine externe Referenz (außer der Erde) und der Zylinder ist extrem leicht sauber zu halten. Der Neigungswinkel ändert sich im Verhältnis zum Auftrieb und damit im direkten Zusammenhang mit dem Zuckergehalt.\r\nKein unnötiges Öffnen zum spindeln und evtl. Kontaminieren!\r\n\r\n![Kränung](docs/kraengung.jpg)\r\n\r\nDaher die Idee, ein IoT device mit Wifi zusammen mit einem Beschleunigungssensor und Temperatursensor in einen schwimmenden Zylinder zu legen. Dort wacht er alle bsp. 5min auf, verbindet sich mit meinem Wlan und sendet seinen Neigungswinkel, Temperatur und Akkuspannung an einen Cloudservice. \r\n\r\n### *Metazentrum*\r\n\r\nEigentlich dreht es sich hier um das \"Metazentrum\", der Zylinder wird solange rotieren bis das Metazentrum im Lot zum Auftriebspunkt ist. Diesen Wert messen wir.\r\n\r\nMan kann insofern trimmen, dass man am Boden ein paar Gramm hinzufügt, damit stellt sich der Zylinder mehr auf, oder am Deckel, damit krängt er mehr. \r\n\r\nIn der Software berechnent man aus den XYZ Beschleunigungswerten den Euler Winkel für X und Y und bildet daraus den Absolutwinkel. Diesen verrechnen wir mit den kalibrierten Eckwerten zum °Plato.\r\n\r\n\r\n***\r\n\r\n## Aufbau\r\n\r\n>***ACHTUNG: dies entspricht Stand 20.11.2016***\r\n\r\n### Bauteile\r\n\r\n- [Wemos D1 mini](https://www.wemos.cc/product/d1-mini.html)\r\n- ```GY-521``` Gyro & Beschleunigungssensor (MPU-6050 auf passendem breakout Board)\r\n- [DS18B20 Temperatursensor](https://www.maximintegrated.com/en/products/analog/sensors-and-sensor-interface/DS18B20.html)\r\n- Lochrasterplatine 3x4cm\r\n- Widerstände\r\n  - 4k7 Ohm\r\n  - 220k Ohm\r\n  - 470 Ohm\r\n- Mikro Schalter\r\n- ```18650 LiIo Zelle``` (z.B. ```Panasonic NCR18650B``` **geschützt** oder ohne **PCB**) ***UNGETESTED***\r\n- Lipo Lademodul ```TP4056``` ***UNGETESTED***\r\n- Kunstoff Schlitten (Vorlage zum 3D drucken im repo)\r\n  - alternativ (Lochraster) Platine ***UNGETESTED***)\r\n\r\n- Kunstoff Zylinder ```Petling```\r\n\r\n> ## Info\r\n> Der Anbieter [cachers-world.de](http://cachers-world.de/de/Petling-XL) unsterstützt dieses Projekt indem er nachhaltig den passenden Petling liefern möchte und über den Gutschein-Code \"```HOBBYBRAUER```\"  (Großschreibung!) 20% Rabatt gewährt. \r\nDieser [Petling-XL](http://cachers-world.de/de/Petling-XL) passt zu dem 3D gedruckten Schlitten.\r\n>\r\n>Info: *\"Ist im Moment dann nur 1,44 EUR ab 2017 werden es dann 1,52 EUR sein, weil der Artikel 10ct hoch geht.\"*\r\n\r\n>Info 2: Zur Zeit ausverkauft, nachbestellt.\r\n\r\n***\r\n### Schaltplan\r\n\r\n***siehe [Schaltplan](docs/Schaltplan.md)***\r\n\r\n***\r\n\r\n### Schlitten\r\n\r\n![Schlitten](docs/Schlitten_cad.jpg)\r\n![Zusammenbau](docs/assembled2.jpg)\r\n![Zusammenbau](docs/assembled.jpg)\r\n\r\n<a href=\"http://www.youtube.com/watch?feature=player_embedded&v=gpVarh8BxhQ\" target=\"_blank\"><img src=\"http://img.youtube.com/vi/gpVarh8BxhQ/0.jpg\" \r\nalt=\"Druck\" width=\"240\" height=\"180\" border=\"10\" /></a>\r\n\r\n\r\n\r\n***\r\n\r\n## Konfiguration\r\n\r\n### Ubitdots\r\n\r\n- Zu Beginn muss ein kostenloser Account bei [Ubidots.com](https://ubidots.com) erstellt werden\r\n- Im Menü  ```API Credentials``` erhält man seinen ```Token``` durch das die iSpindel die Berechtigung zum Schreiben der Daten erhält.  \r\n***Diesen notieren.***  \r\n![Token](docs/UbiToken.jpg)  \r\n\r\n> Update 28.11.16: Durch Auto - Konfiguration sind folgende Schritte nicht mehr nötig\r\n\r\n- ~~In diesem Account erstellt man nun ein neues ```Data Source``` und benennt seine iSpindel bsp. \"iSpindel001\"~~ \r\n\r\n  ![UbiDS](docs/UbiDS.jpg)\r\n\r\n- ~~In diesem Device erstellt man nun 3  ```Variable``` das den 3 Datenquellen entspricht die geliefert werden~~\r\n  - ~~Neigung (wird später zu °Plato umgerechnet)~~\r\n  - ~~Temperatur (fließt auch in °Plato ein)~~\r\n  - ~~Batterie Spannung~~ \r\n\r\n  ~~***Notieren dieser 3 ```ID's``` die man über das  ```i``` Icon erhält***~~\r\n\r\n  ![IDs](docs/UbiIDs.jpg)~~\r\n\r\n\r\n### Portal\r\n\r\nDurch mehrmaliges Drücken der ```Reset Taste``` erstellt der Wemos einen AccessPoint, mit dem verbunden man die nötigen Einstellugen vornehmen kann.\r\n\r\n> Die ```iSpindel``` signalisiert dass sie sich im *Konfiguration-Modus* druch permanentes Blinken im Sekundentakt.  \r\nMan verlässt den *Konfiguration-Modus* durch speichern seiner Einstellungen, durch betätigen des Menüpunkts ```Start iSpindel``` oder durch warten von 5 Minuten. Danach befindet sie sich im *Betriebsmodus* d.h. sie sendet ihre Daten und geht daraufhin direkt in den \"Deep Sleep\" Standby Modus. Daher ist sie im normalen Modus nicht erreibar.\r\n\r\n- Der Ubidots  ```Token``` ~~und die  ```IDs```~~, welche man oben notiert hat, werden nun an dieser Stelle eingetragen.  \r\n\r\n- Ebenfalls stellt man hier den ```Intervall``` ein in dem sie Daten liefert. Dies hat direkt mit der Akku Lebensdauer zu tun. Es empfiehlt sich in der Praxis etwa ```1800``` Sekunden (= 30 Minuten) Takt zu wählen.\r\n\r\n   ![Setup](docs/setup.jpg)\r\n\r\n\r\n- Man erreicht es über\r\n\r\n   ![AccessPoint](docs/AP.png)![Portal](docs/Portal.png)\r\n\r\n\r\n- Eine Übersicht der Daten kann man über den ```Info``` Menüpunkt einsehen\r\n\r\n  ![Info](docs/info.png)\r\n\r\n> Nach dem man obige Daten eingetragen und gespeichert hat, wird die Spindel sich mit dem Wlan und Ubidots verbinden und die Daten übertragen.  \r\nAuf der Ubidots Weboberfläche wird man nun unter ```Sources``` sehen dass die Daten aktualisiert werden.  \r\nNun kann man im ```Dashboard``` sich seine Graphen nach Belieben zusammenstellen.\r\n\r\n***\r\n\r\n## Software \r\n\r\n### Firmware flashen\r\n\r\n[Firmware flashen](docs/Firmware.md)\r\n\r\n### Benutzte Bibliotheken\r\n\r\n- https://github.com/tzapu/WiFiManager zum Herstellen der Verbindung (verändert)\r\n- https://github.com/bblanchon/ArduinoJson\r\n\r\n***Gefällt es dir, na dann spende mir halt ein Bier***  :beers:\r\n\r\n[![Donate](https://www.paypalobjects.com/de_DE/DE/i/btn/btn_donate_LG.gif)](https://www.paypal.me/universam)\r\n\r\n",
  "note": "Don't delete this file! It's used internally to help with page regeneration."
}